2022-12-31 20:33:54.015 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-12-31 20:33:54.828 [background-preinit] WARN  o.s.h.converter.json.Jackson2ObjectMapperBuilder - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2022-12-31 20:33:55.305 [main] INFO  c.e.c.CyjEntityCreaterApplicationTest - No active profile set, falling back to default profiles: default
2022-12-31 20:33:56.637 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-12-31 20:33:56.643 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-12-31 20:33:56.734 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65ms. Found 0 Redis repository interfaces.
2022-12-31 20:33:56.895 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-12-31 20:33:57.188 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=367f731c-d771-3d8f-8931-5e86b716d0db
2022-12-31 20:33:58.564 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 0 (http)
2022-12-31 20:33:58.581 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2022-12-31 20:33:58.582 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-12-31 20:33:58.583 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-12-31 20:33:58.690 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-12-31 20:33:58.690 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3380 ms
2022-12-31 20:33:58.974 [main] INFO  com.netflix.config.sources.URLConfigurationSource - URLs to be used as dynamic configuration source: [file:/C:/Users/noice/IdeaProjects/noice-admin/cyj-entity-creater/target/classes/config.properties]
2022-12-31 20:33:59.006 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3bbf1c0d
2022-12-31 20:34:01.312 [main] INFO  com.netflix.config.sources.URLConfigurationSource - URLs to be used as dynamic configuration source: [file:/C:/Users/noice/IdeaProjects/noice-admin/cyj-entity-creater/target/classes/config.properties]
2022-12-31 20:34:02.063 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-12-31 20:34:06.005 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-12-31 20:34:06.234 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-12-31 20:34:06.684 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-12-31 20:34:07.174 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2022-12-31 20:34:07.223 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 55230 (http) with context path ''
2022-12-31 20:34:07.224 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 55230
2022-12-31 20:34:07.232 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-12-31 20:34:07.319 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-12-31 20:34:07.399 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-12-31 20:34:07.400 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-12-31 20:34:07.586 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-12-31 20:34:07.586 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-12-31 20:34:07.810 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-12-31 20:34:08.010 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-12-31 20:34:08.010 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-12-31 20:34:08.010 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-12-31 20:34:08.011 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2022-12-31 20:34:08.011 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-12-31 20:34:08.011 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-12-31 20:34:08.011 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-12-31 20:34:12.186 [main] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$d526fd3e.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:147)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:132)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:46)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:120)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 111 more

2022-12-31 20:34:12.189 [main] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:34:12.190 [main] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$d526fd3e.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:147)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:132)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:46)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:120)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)

2022-12-31 20:34:12.190 [main] INFO  com.netflix.discovery.DiscoveryClient - Initial registry fetch from primary servers failed
2022-12-31 20:34:12.190 [main] WARN  com.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2022-12-31 20:34:12.191 [main] INFO  com.netflix.discovery.DiscoveryClient - Initial registry fetch from backup servers failed
2022-12-31 20:34:12.192 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2022-12-31 20:34:12.196 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-12-31 20:34:12.200 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1672490052198 with initial instances count: 0
2022-12-31 20:34:12.205 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application CYJ-ENTITY-CREATER with eureka with status UP
2022-12-31 20:34:12.206 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1672490052206, current=UP, previous=STARTING]
2022-12-31 20:34:12.209 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0: registering service...
2022-12-31 20:34:12.513 [main] INFO  c.e.c.CyjEntityCreaterApplicationTest - Started CyjEntityCreaterApplicationTest in 19.451 seconds (JVM running for 22.37)
2022-12-31 20:34:12.545 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-12-31 20:34:12.767 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-12-31 20:34:12.775 [main] INFO  o.s.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d910fd6 testClass = CyjEntityCreaterApplicationTest, testInstance = CyjEntityCreaterApplicationTest(wac=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76a36b71, started on Sat Dec 31 20:33:55 CST 2022, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@571c5681, mockMvc=null, persistentCustomServiceImpl=com.example.cyjentitycreater.service.bean.custom.PersistentCustomServiceImpl@cf0e8b4), testMethod = findDataTableAndFormByNameTest@CyjEntityCreaterApplicationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26275bef testClass = CyjEntityCreaterApplicationTest, locations = '{}', classes = '{class com.example.cyjentitycreater.CyjEntityCreaterApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e38921c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@49070868, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3f200884, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4206a205, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2641e737], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@6a53cddc]; rollback [true]
2022-12-31 20:34:13.233 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=090c8888-8cff-42bc-9415-63d02432788d, persistentName=查询, persistentCode=sql, persistentRelation=0, appServiceId=17d6157d-1ca1-452e-bc4f-dec67d7a6db9, status=1, sortCode=1, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.251 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"SQL_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"566502dd6b43852404bc24b936df7e3a","persistentFormCode":"SQL_DEFAULT_FORM","persistentFormName":"SQL默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"090c8888-8cff-42bc-9415-63d02432788d","sortCode":15,"status":1},"SQL_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"15b07392dfbff6634437c272e26b1779","persistentFormConfigCode":"sql_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询类型","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"65dbe714c72c0ed4e7eb71da8abfcc0c","persistentFormConfigCode":"sql_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询编码","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c3a9ad77a3333a699717fd17bb87d733","persistentFormConfigCode":"sql_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询名称","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"de6898aca83c0cad26588e0e69ab3ec6","persistentFormConfigCode":"sql_str","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询语句","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":3,"status":1}]},{"SQL_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"44bffb9b7b7dd8e3a73d39c641d89cae","persistentId":"090c8888-8cff-42bc-9415-63d02432788d","persistentTableCode":"SQL_DEFAULT_TABLE","persistentTableName":"SQL默认表格","sortCode":14,"status":1},"SQL_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"89c15fcf4cb979404283484d9afce87c","persistentTableConfigCode":"sql_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"d67c1cfa5e8e74839a1ebc396729ea92","persistentTableConfigCode":"sql_str","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询语句","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"eb5405a9962fc428ae21428502c3085c","persistentTableConfigCode":"sql_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"fbce858e0f438245f7a2489864fd511c","persistentTableConfigCode":"sql_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":4,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.465 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=0dec3fad-c14d-469b-ae36-987718ccf452, persistentName=字典, persistentCode=dictionary, persistentRelation=0, appServiceId=5e398def-1513-4bcc-8f9a-560756e13237, status=1, sortCode=2, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.477 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"DICTIONARY_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"93cee6c9f9b179fa0ad656180d2a2c25","persistentFormCode":"DICTIONARY_DEFAULT_FORM","persistentFormName":"DICTIONARY默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"0dec3fad-c14d-469b-ae36-987718ccf452","sortCode":15,"status":1},"DICTIONARY_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"7e2d89869d8067d9f73a5d9a25b3ed1e","persistentFormConfigCode":"dictionary_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"字典编码","persistentFormConfigRequired":0,"persistentFormId":"93cee6c9f9b179fa0ad656180d2a2c25","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c96939a96781030362f70de06509a6ad","persistentFormConfigCode":"dictionary_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"字典名称","persistentFormConfigRequired":0,"persistentFormId":"93cee6c9f9b179fa0ad656180d2a2c25","sortCode":2,"status":1}]},{"DICTIONARY_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"329b53f63ae935564203e8da155e3017","persistentId":"0dec3fad-c14d-469b-ae36-987718ccf452","persistentTableCode":"DICTIONARY_DEFAULT_TABLE","persistentTableName":"DICTIONARY默认表格","sortCode":15,"status":1},"DICTIONARY_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"349b606cc375287b17d6e6059b1bf6bc","persistentTableConfigCode":"dictionary_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"字典名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"329b53f63ae935564203e8da155e3017","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"eed2ac8c07bc22a3b39004215d9c9664","persistentTableConfigCode":"dictionary_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"字典编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"329b53f63ae935564203e8da155e3017","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.480 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=539f61c6-920e-49de-90c0-ed0c6813706b, persistentName=目录, persistentCode=catalog, persistentRelation=0, appServiceId=5e398def-1513-4bcc-8f9a-560756e13237, status=1, sortCode=3, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.490 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"CATALOG_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"7581f8dfe8aede92ffde8b628f0bf3b6","persistentFormCode":"CATALOG_DEFAULT_FORM","persistentFormName":"CATALOG默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"539f61c6-920e-49de-90c0-ed0c6813706b","sortCode":15,"status":1},"CATALOG_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"a24f04a8b926b76289cc03231f79af76","persistentFormConfigCode":"catalog_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"目录名称","persistentFormConfigRequired":0,"persistentFormId":"7581f8dfe8aede92ffde8b628f0bf3b6","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c45f153b63a11452d5e6349cc5ad6bce","persistentFormConfigCode":"catalog_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"目录编码","persistentFormConfigRequired":0,"persistentFormId":"7581f8dfe8aede92ffde8b628f0bf3b6","sortCode":1,"status":1}]},{"CATALOG_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"1df05edfe4a4133b00fa91db96967cc8","persistentId":"539f61c6-920e-49de-90c0-ed0c6813706b","persistentTableCode":"CATALOG_DEFAULT_TABLE","persistentTableName":"CATALOG默认表格","sortCode":15,"status":1},"CATALOG_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"765620e229dcd003f1362db9e4c64afd","persistentTableConfigCode":"catalog_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"目录名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"1df05edfe4a4133b00fa91db96967cc8","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"e00b66bb2ba46cf7e03046a2720a756d","persistentTableConfigCode":"catalog_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"目录编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"1df05edfe4a4133b00fa91db96967cc8","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.496 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=5af4b799-c4a7-4507-893b-ede0b8b6a190, persistentName=实体表格配置, persistentCode=persistent_table_config, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=16, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.505 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTTABLECONFIG_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"c6db740af0af514106c0383f8d7aee10","persistentFormCode":"PERSISTENTTABLECONFIG_DEFAULT_FORM","persistentFormName":"PERSISTENTTABLECONFIG默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"5af4b799-c4a7-4507-893b-ede0b8b6a190","sortCode":15,"status":1},"PERSISTENTTABLECONFIG_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"087248e071b2b7a57ad8bfa1752a043d","persistentFormConfigCode":"persistent_table_config_search","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置是否可搜索","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"44512a9459abc26aca5799b9355c3e75","persistentFormConfigCode":"persistent_table_config_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置组件名称","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"5708320c51ca502c20e357d595a4eb4e","persistentFormConfigCode":"persistent_table_config_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置组件编码","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"5ab91f943839f2981402e47ea2527b22","persistentFormConfigCode":"persistent_table_config_display","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置是否展示","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"ed3abd739cb047cc5a9c8f487e1fc2c6","persistentFormConfigCode":"persistent_table_config_width","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置宽度","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":4,"status":1}]},{"PERSISTENTTABLECONFIG_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"78c00c54baceb2713d747551c3a46c4e","persistentId":"5af4b799-c4a7-4507-893b-ede0b8b6a190","persistentTableCode":"PERSISTENTTABLECONFIG_DEFAULT_TABLE","persistentTableName":"PERSISTENTTABLECONFIG默认表格","sortCode":15,"status":1},"PERSISTENTTABLECONFIG_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"28c0e182dc017e384d657f360d3af8e3","persistentTableConfigCode":"persistent_table_config_search","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置是否可搜索","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"480269b3e17715245d92463712e0d727","persistentTableConfigCode":"persistent_table_config_width","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置宽度","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"69a94c039718eef163b9c836707f6843","persistentTableConfigCode":"persistent_table_config_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置组件名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"911b8027d31d0350f4e1a776e3e4e603","persistentTableConfigCode":"persistent_table_config_display","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置是否展示","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"a35196c4426fe14592956702f2f49b89","persistentTableConfigCode":"persistent_table_config_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置组件编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":2,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.508 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=604fc1dc-cafe-4b9d-9e61-8eeb1a6dcb15, persistentName=实体表单配置, persistentCode=persistent_form_config, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=14, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.521 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTFORMCONFIG_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"25d9bb1c632daf193425b1c7a52969e7","persistentFormCode":"PERSISTENTFORMCONFIG_DEFAULT_FORM","persistentFormName":"PERSISTENTFORMCONFIG默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"604fc1dc-cafe-4b9d-9e61-8eeb1a6dcb15","sortCode":15,"status":1},"PERSISTENTFORMCONFIG_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"6fc0fabe4edd629f31a4ad67ff157060","persistentFormConfigCode":"persistent_form_config_edit","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件是否可编辑","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":8,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"981e5e98b338324997ee15cb93af5358","persistentFormConfigCode":"persistent_form_config_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件编码","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"a45552108348e5e69eefbccb260a9833","persistentFormConfigCode":"persistent_form_config_required","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件是否必填","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"ac03b01be1927e3ea6068ca09cec5cae","persistentFormConfigCode":"persistent_form_config_data_source","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件数据源","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":6,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"b469993ff82cb9734d7a288f572e7828","persistentFormConfigCode":"persistent_form_config_mode","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c438004b0302675af93da98c54b96736","persistentFormConfigCode":"persistent_form_config_default_value","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件默认值","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"e11be6de3e1b45653139228aaf672750","persistentFormConfigCode":"persistent_form_config_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件名称","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"fe68db4a75f75528b6fd374226682a20","persistentFormConfigCode":"persistent_form_config_direction","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件方向","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":7,"status":1}]},{"PERSISTENTFORMCONFIG_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"baad6232a89a8c767a47c2c40336d0c7","persistentId":"604fc1dc-cafe-4b9d-9e61-8eeb1a6dcb15","persistentTableCode":"PERSISTENTFORMCONFIG_DEFAULT_TABLE","persistentTableName":"PERSISTENTFORMCONFIG默认表格","sortCode":15,"status":1},"PERSISTENTFORMCONFIG_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"1e0037175d0205839e4365edfb742375","persistentTableConfigCode":"persistent_form_config_data_source","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件数据源","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":6,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"3a07c786e4b8430341616fed564e31f6","persistentTableConfigCode":"persistent_form_config_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"56a1e0716c496411a5af8b25403d1dee","persistentTableConfigCode":"persistent_form_config_mode","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"6d9fe33a2f0a63361c98f54dcc33d2c8","persistentTableConfigCode":"persistent_form_config_edit","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件是否可编辑","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":8,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"7d610cb30b760d5d565d126496e9f8e7","persistentTableConfigCode":"persistent_form_config_default_value","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件默认值","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"bd9bf5c3eb4f7e4d966a2da8857b7840","persistentTableConfigCode":"persistent_form_config_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c57237acdeb7d9cec9a57788e23b0b5a","persistentTableConfigCode":"persistent_form_config_direction","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件方向","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":7,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"db3880650ba537ad1442a2d35e6a9a4c","persistentTableConfigCode":"persistent_form_config_required","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件是否必填","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":4,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.523 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=60f843a3-9842-4f1b-a029-726c6e764331, persistentName=服务, persistentCode=app_service, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=10, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.531 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"APPSERVICE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"872825cc13ab549803601d9ea4f017d6","persistentFormCode":"APPSERVICE_DEFAULT_FORM","persistentFormName":"APPSERVICE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"60f843a3-9842-4f1b-a029-726c6e764331","sortCode":15,"status":1},"APPSERVICE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"68c19a8cdb646a12c6ed8c4e72196833","persistentFormConfigCode":"app_service_api","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务接口","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"9475227dccb7eeded1fb8314b0088fa3","persistentFormConfigCode":"app_service_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务编码","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"b2d33693b32433e82d6cf8ae38665ae3","persistentFormConfigCode":"app_service_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务名称","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ba2da6dbeff5f5ae8e0813539ed85373","persistentFormConfigCode":"app_service_path","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务路径","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f7da84508f1965fcfc0c87a2d64900ad","persistentFormConfigCode":"app_service_port","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务端口","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":4,"status":1}]},{"APPSERVICE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"3a3fb0bb6c7c877d5852c9141791522a","persistentId":"60f843a3-9842-4f1b-a029-726c6e764331","persistentTableCode":"APPSERVICE_DEFAULT_TABLE","persistentTableName":"APPSERVICE默认表格","sortCode":15,"status":1},"APPSERVICE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"2b199bde50e9a704b713327dde8d0e51","persistentTableConfigCode":"app_service_path","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务路径","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"40ab24f9c87188ee324760c090c477a9","persistentTableConfigCode":"app_service_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"7d629854636d39e171fe740020119d2d","persistentTableConfigCode":"app_service_api","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务接口","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"a1104c4ec6912ae4f909610fc62a3068","persistentTableConfigCode":"app_service_port","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务端口","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"a1fd48435b35054104821b41e46d0065","persistentTableConfigCode":"app_service_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":5,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.534 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=742bc1a6-a018-4097-a40d-d7dd3b74cc71, persistentName=实体表格, persistentCode=persistent_table, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=15, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.543 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTTABLE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"d011e0712a7efed5722e3881db14d535","persistentFormCode":"PERSISTENTTABLE_DEFAULT_FORM","persistentFormName":"PERSISTENTTABLE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"742bc1a6-a018-4097-a40d-d7dd3b74cc71","sortCode":15,"status":1},"PERSISTENTTABLE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"154e8eb668528dde814c8b9f93599949","persistentFormConfigCode":"persistent_table_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格名称","persistentFormConfigRequired":0,"persistentFormId":"d011e0712a7efed5722e3881db14d535","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"dc366b6cca3578b89eba6fd5f03ad642","persistentFormConfigCode":"persistent_table_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格编码","persistentFormConfigRequired":0,"persistentFormId":"d011e0712a7efed5722e3881db14d535","sortCode":2,"status":1}]},{"PERSISTENTTABLE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"18cfca984932ccc8cfb6df9de02ae962","persistentId":"742bc1a6-a018-4097-a40d-d7dd3b74cc71","persistentTableCode":"PERSISTENTTABLE_DEFAULT_TABLE","persistentTableName":"PERSISTENTTABLE默认表格","sortCode":15,"status":1},"PERSISTENTTABLE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"c8cb3080257d349917a94fb9c8955728","persistentTableConfigCode":"persistent_table_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"18cfca984932ccc8cfb6df9de02ae962","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ed3ea551577bd675234a412247cbc1e8","persistentTableConfigCode":"persistent_table_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"18cfca984932ccc8cfb6df9de02ae962","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.545 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=745acad5-fbdf-4755-ae6d-885b3e76d5e6, persistentName=属性, persistentCode=property, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=11, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.553 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PROPERTY_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"e8ac28ed22b802560ba32f313f52ac9d","persistentFormCode":"PROPERTY_DEFAULT_FORM","persistentFormName":"PROPERTY默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"745acad5-fbdf-4755-ae6d-885b3e76d5e6","sortCode":15,"status":1},"PROPERTY_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"4f8b39cefd9fc59c4e5218ef96da5eae","persistentFormConfigCode":"property_length","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性长度","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"55be8e61e98fac8a0c2ab80e638d1ec6","persistentFormConfigCode":"property_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性类型","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"baa0894a8f3805361b63619a2b5a5704","persistentFormConfigCode":"property_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性编码","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"bf165f98d05324a1635ff083fe526e37","persistentFormConfigCode":"property_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性名称","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f6a8de85503099ba2a2e0e1e426ffdc2","persistentFormConfigCode":"property_relation","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性是否关联字段","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"fa67727fceafd75ed380a07c70c3b8a3","persistentFormConfigCode":"property_null","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性是否为空","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":6,"status":1}]},{"PROPERTY_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"b82a97fffa5f60c053c345ff0278dfd6","persistentId":"745acad5-fbdf-4755-ae6d-885b3e76d5e6","persistentTableCode":"PROPERTY_DEFAULT_TABLE","persistentTableName":"PROPERTY默认表格","sortCode":15,"status":1},"PROPERTY_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"042b5427a43cd613bd8e3eaeb3007060","persistentTableConfigCode":"property_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"055ea44b0f41a21a9889f453a3d8dea2","persistentTableConfigCode":"property_length","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性长度","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"67fa08498336046357445a550eafccfd","persistentTableConfigCode":"property_null","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性是否为空","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":6,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"7e8e2001767df7849294b2e0b1c515fe","persistentTableConfigCode":"property_relation","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性是否关联字段","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"d7ba5892508017d914825ba18f20bdbb","persistentTableConfigCode":"property_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"db887b7206c294bcdb3d5d98bc3d8cd0","persistentTableConfigCode":"property_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.556 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=84378d0d-7925-4589-b5c6-86b1755d26e7, persistentName=用户角色, persistentCode=user_role, persistentRelation=1, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=4, createdDate=2022-12-15T22:16:41, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.559 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[],"persistentTable":[]}
2022-12-31 20:34:13.561 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=88feb15d-70a1-47bf-b2b3-b8c59e2ddaf9, persistentName=实体, persistentCode=persistent, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=12, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.569 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENT_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"a862d90020ffe3702efb53317855caed","persistentFormCode":"PERSISTENT_DEFAULT_FORM","persistentFormName":"PERSISTENT默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"88feb15d-70a1-47bf-b2b3-b8c59e2ddaf9","sortCode":15,"status":1},"PERSISTENT_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"6fedbb9a303ac68f148ee03f9de126a2","persistentFormConfigCode":"persistent_relation","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体是否关联表","persistentFormConfigRequired":0,"persistentFormId":"a862d90020ffe3702efb53317855caed","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"9c65ffc57570342334211dbabfcba4df","persistentFormConfigCode":"persistent_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体编码","persistentFormConfigRequired":0,"persistentFormId":"a862d90020ffe3702efb53317855caed","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"acc093f44b7ac6b00b32d7d868e38160","persistentFormConfigCode":"persistent_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体名称","persistentFormConfigRequired":0,"persistentFormId":"a862d90020ffe3702efb53317855caed","sortCode":1,"status":1}]},{"PERSISTENT_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"7a9b549923a1120187dadd2552b1341b","persistentId":"88feb15d-70a1-47bf-b2b3-b8c59e2ddaf9","persistentTableCode":"PERSISTENT_DEFAULT_TABLE","persistentTableName":"PERSISTENT默认表格","sortCode":15,"status":1},"PERSISTENT_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"629e652297fe4afb8e5f2a8ecbca9655","persistentTableConfigCode":"persistent_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"7a9b549923a1120187dadd2552b1341b","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"664393c826d1466660ea5c65e592bb63","persistentTableConfigCode":"persistent_relation","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体是否关联表","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"7a9b549923a1120187dadd2552b1341b","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"c7746f53080130127431c4a7b7417c26","persistentTableConfigCode":"persistent_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"7a9b549923a1120187dadd2552b1341b","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.572 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=8e954fce-ac50-45b9-9bbd-fb5eaa839b4f, persistentName=企业, persistentCode=enterprise, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=5, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.580 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"ENTERPRISE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"0f58c5a12ac6a1d2721ccc34e1cf58df","persistentFormCode":"ENTERPRISE_DEFAULT_FORM","persistentFormName":"ENTERPRISE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"8e954fce-ac50-45b9-9bbd-fb5eaa839b4f","sortCode":15,"status":1},"ENTERPRISE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"06307d51672f87f0f49f3ade0743412b","persistentFormConfigCode":"enterprise_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"企业名称","persistentFormConfigRequired":0,"persistentFormId":"0f58c5a12ac6a1d2721ccc34e1cf58df","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ac155ba235fb89baf0d25f1f29d679ab","persistentFormConfigCode":"enterprise_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"企业编码","persistentFormConfigRequired":0,"persistentFormId":"0f58c5a12ac6a1d2721ccc34e1cf58df","sortCode":1,"status":1}]},{"ENTERPRISE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"6adeb4173f015d672f16b276a40500c0","persistentId":"8e954fce-ac50-45b9-9bbd-fb5eaa839b4f","persistentTableCode":"ENTERPRISE_DEFAULT_TABLE","persistentTableName":"ENTERPRISE默认表格","sortCode":15,"status":1},"ENTERPRISE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"33a70889811c4983127e8df408630e85","persistentTableConfigCode":"enterprise_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"企业编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"6adeb4173f015d672f16b276a40500c0","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"398778758dd9e0ce605b2b8e1ac0b6e6","persistentTableConfigCode":"enterprise_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"企业名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"6adeb4173f015d672f16b276a40500c0","sortCode":2,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.582 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=9aafb17f-45cd-4bae-a4de-934c087c0f61, persistentName=权限, persistentCode=authority, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=6, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.590 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"AUTHORITY_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"08cfb2dd601194f8812020d6b0d18494","persistentFormCode":"AUTHORITY_DEFAULT_FORM","persistentFormName":"AUTHORITY默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"9aafb17f-45cd-4bae-a4de-934c087c0f61","sortCode":15,"status":1},"AUTHORITY_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"1380b18418dcc4aa4dc990d5098d06ee","persistentFormConfigCode":"authority_path","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限路径","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"966eb3ec27a7227e9abad52c08c74dac","persistentFormConfigCode":"authority_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限类型","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"b3250af0c5a4a52170230264ef4dbe9b","persistentFormConfigCode":"authority_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限名称","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"cf094eacd49cd2c83d39b70b814fed3b","persistentFormConfigCode":"authority_method","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限请求模式","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"d849199afa2a06a96b304073ad2bdbe6","persistentFormConfigCode":"authority_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限编码","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":1,"status":1}]},{"AUTHORITY_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"2a7975b0bc71b1a8ccd7565a6426eb52","persistentId":"9aafb17f-45cd-4bae-a4de-934c087c0f61","persistentTableCode":"AUTHORITY_DEFAULT_TABLE","persistentTableName":"AUTHORITY默认表格","sortCode":15,"status":1},"AUTHORITY_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"096f306f20f57c1dc477c49daf166d08","persistentTableConfigCode":"authority_method","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限请求模式","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"78ea656bdae6482a1bcccc55ceecdaf5","persistentTableConfigCode":"authority_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"bbcb02838e4d0be4bd84cf879a2c7c73","persistentTableConfigCode":"authority_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"edd11c2686fced4fa378c6efdef94e15","persistentTableConfigCode":"authority_path","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限路径","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f283d903aaefa7c904ddbcef367a5f5a","persistentTableConfigCode":"authority_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":2,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.591 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=c553f6df-d9b1-47b9-8e18-ca18ba2cbf7a, persistentName=实体表单, persistentCode=persistent_form, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=13, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.597 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTFORM_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"4db18b2164ac12999e56c8e59b4ff56d","persistentFormCode":"PERSISTENTFORM_DEFAULT_FORM","persistentFormName":"PERSISTENTFORM默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"c553f6df-d9b1-47b9-8e18-ca18ba2cbf7a","sortCode":15,"status":1},"PERSISTENTFORM_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"1b34086d599e0fd5689012b5cba161f5","persistentFormConfigCode":"persistent_form_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单名称","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"898f7bc649a00322e52e4c2509aaa39f","persistentFormConfigCode":"persistent_form_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单编码","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8b2cb82234d142165ea35bc566452384","persistentFormConfigCode":"persistent_form_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单类型","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"c12b9e709698bec884ddac67029f8433","persistentFormConfigCode":"persistent_form_row","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单列数","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":4,"status":1}]},{"PERSISTENTFORM_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"09f1194ff1eb49a3eb707f775b1bee01","persistentId":"c553f6df-d9b1-47b9-8e18-ca18ba2cbf7a","persistentTableCode":"PERSISTENTFORM_DEFAULT_TABLE","persistentTableName":"PERSISTENTFORM默认表格","sortCode":15,"status":1},"PERSISTENTFORM_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"75b1d034da3fbff1bcb2901adcf610a8","persistentTableConfigCode":"persistent_form_row","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单列数","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8a23f5c63be84003c75f25ca82cddf53","persistentTableConfigCode":"persistent_form_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"afebb094f39aae512b9e05b1e72f793d","persistentTableConfigCode":"persistent_form_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"dca8ffe7443b5624facca8b4f9c18188","persistentTableConfigCode":"persistent_form_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":3,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.599 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=ea17ecb7-4ab9-4f93-8546-3da3483400aa, persistentName=角色, persistentCode=role, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=7, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.605 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"ROLE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"f51e12991439db6a1565682c2e618e00","persistentFormCode":"ROLE_DEFAULT_FORM","persistentFormName":"ROLE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"ea17ecb7-4ab9-4f93-8546-3da3483400aa","sortCode":15,"status":1},"ROLE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"c5322b9e4c20990297bbf0cd46610868","persistentFormConfigCode":"role_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"角色编码","persistentFormConfigRequired":0,"persistentFormId":"f51e12991439db6a1565682c2e618e00","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f55713c3709798b392f0e32c83ba0488","persistentFormConfigCode":"role_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"角色名称","persistentFormConfigRequired":0,"persistentFormId":"f51e12991439db6a1565682c2e618e00","sortCode":2,"status":1}]},{"ROLE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"00383e21ff48b2a8e15c0cd22dbc0793","persistentId":"ea17ecb7-4ab9-4f93-8546-3da3483400aa","persistentTableCode":"ROLE_DEFAULT_TABLE","persistentTableName":"ROLE默认表格","sortCode":15,"status":1},"ROLE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"0c118ed636797b938a3bb4389620ed9c","persistentTableConfigCode":"role_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"角色名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"00383e21ff48b2a8e15c0cd22dbc0793","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ea787e983d793e52681d734eb76dce9f","persistentTableConfigCode":"role_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"角色编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"00383e21ff48b2a8e15c0cd22dbc0793","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.608 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=edd90446-98bc-4330-8d93-1ba4ff003af0, persistentName=用户, persistentCode=user, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=8, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.614 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"USER_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"f3587fc5abbb541ba9598f19d513bb82","persistentFormCode":"USER_DEFAULT_FORM","persistentFormName":"USER默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"edd90446-98bc-4330-8d93-1ba4ff003af0","sortCode":15,"status":1},"USER_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"7917c1301febb7b6569f88bf13fb9391","persistentFormConfigCode":"user_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"用户编码","persistentFormConfigRequired":0,"persistentFormId":"f3587fc5abbb541ba9598f19d513bb82","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8e737188742d03b1266cac76196269aa","persistentFormConfigCode":"user_password","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"用户密码","persistentFormConfigRequired":0,"persistentFormId":"f3587fc5abbb541ba9598f19d513bb82","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ba095bae10f4e9b5e106c4f80b8c8565","persistentFormConfigCode":"user_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"用户名称","persistentFormConfigRequired":0,"persistentFormId":"f3587fc5abbb541ba9598f19d513bb82","sortCode":2,"status":1}]},{"USER_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"c39985642b59f37b5a4e2ba4db1a0cef","persistentId":"edd90446-98bc-4330-8d93-1ba4ff003af0","persistentTableCode":"USER_DEFAULT_TABLE","persistentTableName":"USER默认表格","sortCode":15,"status":1},"USER_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"31dcfb5cac1cfa1836162e63987177b4","persistentTableConfigCode":"user_password","persistentTableConfigDisplay":0,"persistentTableConfigName":"用户密码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"c39985642b59f37b5a4e2ba4db1a0cef","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8cd6f2db807727aca992977068a5b99a","persistentTableConfigCode":"user_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"用户名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"c39985642b59f37b5a4e2ba4db1a0cef","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"cbedcc4a53c3e469d0dbec85a16926cb","persistentTableConfigCode":"user_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"用户编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"c39985642b59f37b5a4e2ba4db1a0cef","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:34:13.617 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=fa481a88-8417-4e7e-9a26-75efacf26719, persistentName=角色权限, persistentCode=role_authority, persistentRelation=1, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=9, createdDate=2022-12-15T22:16:41, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:34:13.620 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[],"persistentTable":[]}
2022-12-31 20:34:13.634 [main] INFO  o.s.test.context.transaction.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d910fd6 testClass = CyjEntityCreaterApplicationTest, testInstance = CyjEntityCreaterApplicationTest(wac=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76a36b71, started on Sat Dec 31 20:33:55 CST 2022, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@571c5681, mockMvc=null, persistentCustomServiceImpl=com.example.cyjentitycreater.service.bean.custom.PersistentCustomServiceImpl@cf0e8b4), testMethod = findDataTableAndFormByNameTest@CyjEntityCreaterApplicationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26275bef testClass = CyjEntityCreaterApplicationTest, locations = '{}', classes = '{class com.example.cyjentitycreater.CyjEntityCreaterApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e38921c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@49070868, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3f200884, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4206a205, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2641e737], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]
2022-12-31 20:34:13.640 [SpringContextShutdownHook] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application CYJ-ENTITY-CREATER with eureka with status DOWN
2022-12-31 20:34:13.640 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1672490053640, current=DOWN, previous=UP]
2022-12-31 20:34:13.877 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-12-31 20:34:13.882 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-12-31 20:34:13.894 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-12-31 20:34:13.896 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2022-12-31 20:34:16.298 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-12-31 20:34:16.299 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:34:16.311 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:34:16.312 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:34:16.312 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0: registering service...
2022-12-31 20:34:16.905 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2022-12-31 20:34:20.437 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-12-31 20:34:20.438 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:34:20.438 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:34:20.439 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:34:21.042 [SpringContextShutdownHook] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

2022-12-31 20:34:21.051 [SpringContextShutdownHook] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:34:21.051 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-12-31 20:34:21.061 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2022-12-31 20:35:49.502 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-12-31 20:35:49.980 [background-preinit] WARN  o.s.h.converter.json.Jackson2ObjectMapperBuilder - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2022-12-31 20:35:50.363 [main] INFO  c.e.c.CyjEntityCreaterApplicationTest - No active profile set, falling back to default profiles: default
2022-12-31 20:35:51.489 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-12-31 20:35:51.492 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-12-31 20:35:51.525 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2022-12-31 20:35:51.705 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-12-31 20:35:51.968 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=367f731c-d771-3d8f-8931-5e86b716d0db
2022-12-31 20:35:53.289 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 0 (http)
2022-12-31 20:35:53.306 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2022-12-31 20:35:53.307 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-12-31 20:35:53.308 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-12-31 20:35:53.394 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-12-31 20:35:53.395 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3026 ms
2022-12-31 20:35:53.642 [main] INFO  com.netflix.config.sources.URLConfigurationSource - URLs to be used as dynamic configuration source: [file:/C:/Users/noice/IdeaProjects/noice-admin/cyj-entity-creater/target/classes/config.properties]
2022-12-31 20:35:53.668 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3bbf1c0d
2022-12-31 20:35:55.853 [main] INFO  com.netflix.config.sources.URLConfigurationSource - URLs to be used as dynamic configuration source: [file:/C:/Users/noice/IdeaProjects/noice-admin/cyj-entity-creater/target/classes/config.properties]
2022-12-31 20:35:56.514 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-12-31 20:36:00.294 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-12-31 20:36:00.423 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-12-31 20:36:00.711 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-12-31 20:36:01.230 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2022-12-31 20:36:01.273 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 55264 (http) with context path ''
2022-12-31 20:36:01.274 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 55264
2022-12-31 20:36:01.281 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-12-31 20:36:01.364 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-12-31 20:36:01.433 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-12-31 20:36:01.434 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-12-31 20:36:01.629 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-12-31 20:36:01.630 [main] INFO  c.n.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-12-31 20:36:01.888 [main] INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-12-31 20:36:02.119 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-12-31 20:36:06.282 [main] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$82dc97cc.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:147)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:132)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:46)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:120)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 111 more

2022-12-31 20:36:06.282 [main] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:36:06.282 [main] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:316)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:652)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$82dc97cc.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:147)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:132)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:46)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:120)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:43)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)

2022-12-31 20:36:06.282 [main] INFO  com.netflix.discovery.DiscoveryClient - Initial registry fetch from primary servers failed
2022-12-31 20:36:06.282 [main] WARN  com.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2022-12-31 20:36:06.292 [main] INFO  com.netflix.discovery.DiscoveryClient - Initial registry fetch from backup servers failed
2022-12-31 20:36:06.292 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2022-12-31 20:36:06.292 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-12-31 20:36:06.292 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1672490166292 with initial instances count: 0
2022-12-31 20:36:06.302 [main] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application CYJ-ENTITY-CREATER with eureka with status UP
2022-12-31 20:36:06.302 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1672490166302, current=UP, previous=STARTING]
2022-12-31 20:36:06.302 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0: registering service...
2022-12-31 20:36:06.615 [main] INFO  c.e.c.CyjEntityCreaterApplicationTest - Started CyjEntityCreaterApplicationTest in 17.795 seconds (JVM running for 19.303)
2022-12-31 20:36:06.665 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-12-31 20:36:06.888 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-12-31 20:36:06.898 [main] INFO  o.s.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d910fd6 testClass = CyjEntityCreaterApplicationTest, testInstance = CyjEntityCreaterApplicationTest(wac=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76a36b71, started on Sat Dec 31 20:35:50 CST 2022, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@571c5681, mockMvc=null, persistentCustomServiceImpl=com.example.cyjentitycreater.service.bean.custom.PersistentCustomServiceImpl@1e7245da), testMethod = findDataTableAndFormByNameTest@CyjEntityCreaterApplicationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26275bef testClass = CyjEntityCreaterApplicationTest, locations = '{}', classes = '{class com.example.cyjentitycreater.CyjEntityCreaterApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e38921c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@49070868, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3f200884, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4206a205, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2641e737], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@54422189]; rollback [true]
2022-12-31 20:36:07.255 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=090c8888-8cff-42bc-9415-63d02432788d, persistentName=查询, persistentCode=sql, persistentRelation=0, appServiceId=17d6157d-1ca1-452e-bc4f-dec67d7a6db9, status=1, sortCode=1, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:36:07.285 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"SQL_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"566502dd6b43852404bc24b936df7e3a","persistentFormCode":"SQL_DEFAULT_FORM","persistentFormName":"SQL默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"090c8888-8cff-42bc-9415-63d02432788d","sortCode":15,"status":1},"SQL_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"15b07392dfbff6634437c272e26b1779","persistentFormConfigCode":"sql_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询类型","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"65dbe714c72c0ed4e7eb71da8abfcc0c","persistentFormConfigCode":"sql_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询编码","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c3a9ad77a3333a699717fd17bb87d733","persistentFormConfigCode":"sql_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询名称","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"de6898aca83c0cad26588e0e69ab3ec6","persistentFormConfigCode":"sql_str","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"查询语句","persistentFormConfigRequired":0,"persistentFormId":"566502dd6b43852404bc24b936df7e3a","sortCode":3,"status":1}]},{"SQL_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"44bffb9b7b7dd8e3a73d39c641d89cae","persistentId":"090c8888-8cff-42bc-9415-63d02432788d","persistentTableCode":"SQL_DEFAULT_TABLE","persistentTableName":"SQL默认表格","sortCode":14,"status":1},"SQL_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"89c15fcf4cb979404283484d9afce87c","persistentTableConfigCode":"sql_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"d67c1cfa5e8e74839a1ebc396729ea92","persistentTableConfigCode":"sql_str","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询语句","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"eb5405a9962fc428ae21428502c3085c","persistentTableConfigCode":"sql_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"fbce858e0f438245f7a2489864fd511c","persistentTableConfigCode":"sql_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"查询类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"44bffb9b7b7dd8e3a73d39c641d89cae","sortCode":4,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:45.212 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m38s213ms984µs400ns).
2022-12-31 20:37:45.213 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-12-31 20:37:45.214 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-12-31 20:37:45.214 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-12-31 20:37:45.214 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2022-12-31 20:37:45.214 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-12-31 20:37:45.215 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-12-31 20:37:45.215 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-12-31 20:37:45.216 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=0dec3fad-c14d-469b-ae36-987718ccf452, persistentName=字典, persistentCode=dictionary, persistentRelation=0, appServiceId=5e398def-1513-4bcc-8f9a-560756e13237, status=1, sortCode=2, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:45.226 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"DICTIONARY_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"93cee6c9f9b179fa0ad656180d2a2c25","persistentFormCode":"DICTIONARY_DEFAULT_FORM","persistentFormName":"DICTIONARY默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"0dec3fad-c14d-469b-ae36-987718ccf452","sortCode":15,"status":1},"DICTIONARY_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"7e2d89869d8067d9f73a5d9a25b3ed1e","persistentFormConfigCode":"dictionary_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"字典编码","persistentFormConfigRequired":0,"persistentFormId":"93cee6c9f9b179fa0ad656180d2a2c25","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c96939a96781030362f70de06509a6ad","persistentFormConfigCode":"dictionary_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"字典名称","persistentFormConfigRequired":0,"persistentFormId":"93cee6c9f9b179fa0ad656180d2a2c25","sortCode":2,"status":1}]},{"DICTIONARY_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"329b53f63ae935564203e8da155e3017","persistentId":"0dec3fad-c14d-469b-ae36-987718ccf452","persistentTableCode":"DICTIONARY_DEFAULT_TABLE","persistentTableName":"DICTIONARY默认表格","sortCode":15,"status":1},"DICTIONARY_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"349b606cc375287b17d6e6059b1bf6bc","persistentTableConfigCode":"dictionary_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"字典名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"329b53f63ae935564203e8da155e3017","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"eed2ac8c07bc22a3b39004215d9c9664","persistentTableConfigCode":"dictionary_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"字典编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"329b53f63ae935564203e8da155e3017","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.798 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-12-31 20:37:49.798 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:37:49.800 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=539f61c6-920e-49de-90c0-ed0c6813706b, persistentName=目录, persistentCode=catalog, persistentRelation=0, appServiceId=5e398def-1513-4bcc-8f9a-560756e13237, status=1, sortCode=3, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.801 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:37:49.802 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:37:49.815 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"CATALOG_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"7581f8dfe8aede92ffde8b628f0bf3b6","persistentFormCode":"CATALOG_DEFAULT_FORM","persistentFormName":"CATALOG默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"539f61c6-920e-49de-90c0-ed0c6813706b","sortCode":15,"status":1},"CATALOG_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"a24f04a8b926b76289cc03231f79af76","persistentFormConfigCode":"catalog_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"目录名称","persistentFormConfigRequired":0,"persistentFormId":"7581f8dfe8aede92ffde8b628f0bf3b6","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c45f153b63a11452d5e6349cc5ad6bce","persistentFormConfigCode":"catalog_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"目录编码","persistentFormConfigRequired":0,"persistentFormId":"7581f8dfe8aede92ffde8b628f0bf3b6","sortCode":1,"status":1}]},{"CATALOG_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"1df05edfe4a4133b00fa91db96967cc8","persistentId":"539f61c6-920e-49de-90c0-ed0c6813706b","persistentTableCode":"CATALOG_DEFAULT_TABLE","persistentTableName":"CATALOG默认表格","sortCode":15,"status":1},"CATALOG_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"765620e229dcd003f1362db9e4c64afd","persistentTableConfigCode":"catalog_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"目录名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"1df05edfe4a4133b00fa91db96967cc8","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"e00b66bb2ba46cf7e03046a2720a756d","persistentTableConfigCode":"catalog_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"目录编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"1df05edfe4a4133b00fa91db96967cc8","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.820 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=5af4b799-c4a7-4507-893b-ede0b8b6a190, persistentName=实体表格配置, persistentCode=persistent_table_config, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=16, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.828 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTTABLECONFIG_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"c6db740af0af514106c0383f8d7aee10","persistentFormCode":"PERSISTENTTABLECONFIG_DEFAULT_FORM","persistentFormName":"PERSISTENTTABLECONFIG默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"5af4b799-c4a7-4507-893b-ede0b8b6a190","sortCode":15,"status":1},"PERSISTENTTABLECONFIG_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"087248e071b2b7a57ad8bfa1752a043d","persistentFormConfigCode":"persistent_table_config_search","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置是否可搜索","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"44512a9459abc26aca5799b9355c3e75","persistentFormConfigCode":"persistent_table_config_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置组件名称","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"5708320c51ca502c20e357d595a4eb4e","persistentFormConfigCode":"persistent_table_config_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置组件编码","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"5ab91f943839f2981402e47ea2527b22","persistentFormConfigCode":"persistent_table_config_display","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置是否展示","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"ed3abd739cb047cc5a9c8f487e1fc2c6","persistentFormConfigCode":"persistent_table_config_width","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格配置宽度","persistentFormConfigRequired":0,"persistentFormId":"c6db740af0af514106c0383f8d7aee10","sortCode":4,"status":1}]},{"PERSISTENTTABLECONFIG_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"78c00c54baceb2713d747551c3a46c4e","persistentId":"5af4b799-c4a7-4507-893b-ede0b8b6a190","persistentTableCode":"PERSISTENTTABLECONFIG_DEFAULT_TABLE","persistentTableName":"PERSISTENTTABLECONFIG默认表格","sortCode":15,"status":1},"PERSISTENTTABLECONFIG_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"28c0e182dc017e384d657f360d3af8e3","persistentTableConfigCode":"persistent_table_config_search","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置是否可搜索","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"480269b3e17715245d92463712e0d727","persistentTableConfigCode":"persistent_table_config_width","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置宽度","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"69a94c039718eef163b9c836707f6843","persistentTableConfigCode":"persistent_table_config_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置组件名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"911b8027d31d0350f4e1a776e3e4e603","persistentTableConfigCode":"persistent_table_config_display","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置是否展示","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"a35196c4426fe14592956702f2f49b89","persistentTableConfigCode":"persistent_table_config_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格配置组件编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"78c00c54baceb2713d747551c3a46c4e","sortCode":2,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.831 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=604fc1dc-cafe-4b9d-9e61-8eeb1a6dcb15, persistentName=实体表单配置, persistentCode=persistent_form_config, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=14, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.843 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTFORMCONFIG_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:09","id":"25d9bb1c632daf193425b1c7a52969e7","persistentFormCode":"PERSISTENTFORMCONFIG_DEFAULT_FORM","persistentFormName":"PERSISTENTFORMCONFIG默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"604fc1dc-cafe-4b9d-9e61-8eeb1a6dcb15","sortCode":15,"status":1},"PERSISTENTFORMCONFIG_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:09","id":"6fc0fabe4edd629f31a4ad67ff157060","persistentFormConfigCode":"persistent_form_config_edit","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件是否可编辑","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":8,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"981e5e98b338324997ee15cb93af5358","persistentFormConfigCode":"persistent_form_config_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件编码","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"a45552108348e5e69eefbccb260a9833","persistentFormConfigCode":"persistent_form_config_required","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件是否必填","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"ac03b01be1927e3ea6068ca09cec5cae","persistentFormConfigCode":"persistent_form_config_data_source","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件数据源","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":6,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"b469993ff82cb9734d7a288f572e7828","persistentFormConfigCode":"persistent_form_config_mode","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c438004b0302675af93da98c54b96736","persistentFormConfigCode":"persistent_form_config_default_value","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件默认值","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"e11be6de3e1b45653139228aaf672750","persistentFormConfigCode":"persistent_form_config_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件名称","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"fe68db4a75f75528b6fd374226682a20","persistentFormConfigCode":"persistent_form_config_direction","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单配置组件方向","persistentFormConfigRequired":0,"persistentFormId":"25d9bb1c632daf193425b1c7a52969e7","sortCode":7,"status":1}]},{"PERSISTENTFORMCONFIG_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:09","id":"baad6232a89a8c767a47c2c40336d0c7","persistentId":"604fc1dc-cafe-4b9d-9e61-8eeb1a6dcb15","persistentTableCode":"PERSISTENTFORMCONFIG_DEFAULT_TABLE","persistentTableName":"PERSISTENTFORMCONFIG默认表格","sortCode":15,"status":1},"PERSISTENTFORMCONFIG_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:09","id":"1e0037175d0205839e4365edfb742375","persistentTableConfigCode":"persistent_form_config_data_source","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件数据源","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":6,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"3a07c786e4b8430341616fed564e31f6","persistentTableConfigCode":"persistent_form_config_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"56a1e0716c496411a5af8b25403d1dee","persistentTableConfigCode":"persistent_form_config_mode","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"6d9fe33a2f0a63361c98f54dcc33d2c8","persistentTableConfigCode":"persistent_form_config_edit","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件是否可编辑","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":8,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"7d610cb30b760d5d565d126496e9f8e7","persistentTableConfigCode":"persistent_form_config_default_value","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件默认值","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"bd9bf5c3eb4f7e4d966a2da8857b7840","persistentTableConfigCode":"persistent_form_config_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"c57237acdeb7d9cec9a57788e23b0b5a","persistentTableConfigCode":"persistent_form_config_direction","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件方向","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":7,"status":1},{"createdDate":"2022-12-29 22:43:09","id":"db3880650ba537ad1442a2d35e6a9a4c","persistentTableConfigCode":"persistent_form_config_required","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单配置组件是否必填","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"baad6232a89a8c767a47c2c40336d0c7","sortCode":4,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.847 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=60f843a3-9842-4f1b-a029-726c6e764331, persistentName=服务, persistentCode=app_service, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=10, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.854 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"APPSERVICE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"872825cc13ab549803601d9ea4f017d6","persistentFormCode":"APPSERVICE_DEFAULT_FORM","persistentFormName":"APPSERVICE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"60f843a3-9842-4f1b-a029-726c6e764331","sortCode":15,"status":1},"APPSERVICE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"68c19a8cdb646a12c6ed8c4e72196833","persistentFormConfigCode":"app_service_api","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务接口","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"9475227dccb7eeded1fb8314b0088fa3","persistentFormConfigCode":"app_service_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务编码","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"b2d33693b32433e82d6cf8ae38665ae3","persistentFormConfigCode":"app_service_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务名称","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ba2da6dbeff5f5ae8e0813539ed85373","persistentFormConfigCode":"app_service_path","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务路径","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f7da84508f1965fcfc0c87a2d64900ad","persistentFormConfigCode":"app_service_port","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"服务端口","persistentFormConfigRequired":0,"persistentFormId":"872825cc13ab549803601d9ea4f017d6","sortCode":4,"status":1}]},{"APPSERVICE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"3a3fb0bb6c7c877d5852c9141791522a","persistentId":"60f843a3-9842-4f1b-a029-726c6e764331","persistentTableCode":"APPSERVICE_DEFAULT_TABLE","persistentTableName":"APPSERVICE默认表格","sortCode":15,"status":1},"APPSERVICE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"2b199bde50e9a704b713327dde8d0e51","persistentTableConfigCode":"app_service_path","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务路径","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"40ab24f9c87188ee324760c090c477a9","persistentTableConfigCode":"app_service_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"7d629854636d39e171fe740020119d2d","persistentTableConfigCode":"app_service_api","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务接口","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"a1104c4ec6912ae4f909610fc62a3068","persistentTableConfigCode":"app_service_port","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务端口","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"a1fd48435b35054104821b41e46d0065","persistentTableConfigCode":"app_service_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"服务编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"3a3fb0bb6c7c877d5852c9141791522a","sortCode":5,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.856 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=742bc1a6-a018-4097-a40d-d7dd3b74cc71, persistentName=实体表格, persistentCode=persistent_table, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=15, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.864 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTTABLE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"d011e0712a7efed5722e3881db14d535","persistentFormCode":"PERSISTENTTABLE_DEFAULT_FORM","persistentFormName":"PERSISTENTTABLE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"742bc1a6-a018-4097-a40d-d7dd3b74cc71","sortCode":15,"status":1},"PERSISTENTTABLE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"154e8eb668528dde814c8b9f93599949","persistentFormConfigCode":"persistent_table_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格名称","persistentFormConfigRequired":0,"persistentFormId":"d011e0712a7efed5722e3881db14d535","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"dc366b6cca3578b89eba6fd5f03ad642","persistentFormConfigCode":"persistent_table_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表格编码","persistentFormConfigRequired":0,"persistentFormId":"d011e0712a7efed5722e3881db14d535","sortCode":2,"status":1}]},{"PERSISTENTTABLE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"18cfca984932ccc8cfb6df9de02ae962","persistentId":"742bc1a6-a018-4097-a40d-d7dd3b74cc71","persistentTableCode":"PERSISTENTTABLE_DEFAULT_TABLE","persistentTableName":"PERSISTENTTABLE默认表格","sortCode":15,"status":1},"PERSISTENTTABLE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"c8cb3080257d349917a94fb9c8955728","persistentTableConfigCode":"persistent_table_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"18cfca984932ccc8cfb6df9de02ae962","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ed3ea551577bd675234a412247cbc1e8","persistentTableConfigCode":"persistent_table_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表格名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"18cfca984932ccc8cfb6df9de02ae962","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.866 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=745acad5-fbdf-4755-ae6d-885b3e76d5e6, persistentName=属性, persistentCode=property, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=11, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.873 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PROPERTY_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"e8ac28ed22b802560ba32f313f52ac9d","persistentFormCode":"PROPERTY_DEFAULT_FORM","persistentFormName":"PROPERTY默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"745acad5-fbdf-4755-ae6d-885b3e76d5e6","sortCode":15,"status":1},"PROPERTY_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"4f8b39cefd9fc59c4e5218ef96da5eae","persistentFormConfigCode":"property_length","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性长度","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"55be8e61e98fac8a0c2ab80e638d1ec6","persistentFormConfigCode":"property_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性类型","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"baa0894a8f3805361b63619a2b5a5704","persistentFormConfigCode":"property_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性编码","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"bf165f98d05324a1635ff083fe526e37","persistentFormConfigCode":"property_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性名称","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f6a8de85503099ba2a2e0e1e426ffdc2","persistentFormConfigCode":"property_relation","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性是否关联字段","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"fa67727fceafd75ed380a07c70c3b8a3","persistentFormConfigCode":"property_null","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"属性是否为空","persistentFormConfigRequired":0,"persistentFormId":"e8ac28ed22b802560ba32f313f52ac9d","sortCode":6,"status":1}]},{"PROPERTY_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"b82a97fffa5f60c053c345ff0278dfd6","persistentId":"745acad5-fbdf-4755-ae6d-885b3e76d5e6","persistentTableCode":"PROPERTY_DEFAULT_TABLE","persistentTableName":"PROPERTY默认表格","sortCode":15,"status":1},"PROPERTY_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"042b5427a43cd613bd8e3eaeb3007060","persistentTableConfigCode":"property_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"055ea44b0f41a21a9889f453a3d8dea2","persistentTableConfigCode":"property_length","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性长度","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"67fa08498336046357445a550eafccfd","persistentTableConfigCode":"property_null","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性是否为空","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":6,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"7e8e2001767df7849294b2e0b1c515fe","persistentTableConfigCode":"property_relation","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性是否关联字段","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"d7ba5892508017d914825ba18f20bdbb","persistentTableConfigCode":"property_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"db887b7206c294bcdb3d5d98bc3d8cd0","persistentTableConfigCode":"property_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"属性编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"b82a97fffa5f60c053c345ff0278dfd6","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.875 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=84378d0d-7925-4589-b5c6-86b1755d26e7, persistentName=用户角色, persistentCode=user_role, persistentRelation=1, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=4, createdDate=2022-12-15T22:16:41, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.878 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[],"persistentTable":[]}
2022-12-31 20:37:49.880 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=88feb15d-70a1-47bf-b2b3-b8c59e2ddaf9, persistentName=实体, persistentCode=persistent, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=12, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.887 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENT_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"a862d90020ffe3702efb53317855caed","persistentFormCode":"PERSISTENT_DEFAULT_FORM","persistentFormName":"PERSISTENT默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"88feb15d-70a1-47bf-b2b3-b8c59e2ddaf9","sortCode":15,"status":1},"PERSISTENT_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"6fedbb9a303ac68f148ee03f9de126a2","persistentFormConfigCode":"persistent_relation","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体是否关联表","persistentFormConfigRequired":0,"persistentFormId":"a862d90020ffe3702efb53317855caed","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"9c65ffc57570342334211dbabfcba4df","persistentFormConfigCode":"persistent_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体编码","persistentFormConfigRequired":0,"persistentFormId":"a862d90020ffe3702efb53317855caed","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"acc093f44b7ac6b00b32d7d868e38160","persistentFormConfigCode":"persistent_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体名称","persistentFormConfigRequired":0,"persistentFormId":"a862d90020ffe3702efb53317855caed","sortCode":1,"status":1}]},{"PERSISTENT_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"7a9b549923a1120187dadd2552b1341b","persistentId":"88feb15d-70a1-47bf-b2b3-b8c59e2ddaf9","persistentTableCode":"PERSISTENT_DEFAULT_TABLE","persistentTableName":"PERSISTENT默认表格","sortCode":15,"status":1},"PERSISTENT_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"629e652297fe4afb8e5f2a8ecbca9655","persistentTableConfigCode":"persistent_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"7a9b549923a1120187dadd2552b1341b","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"664393c826d1466660ea5c65e592bb63","persistentTableConfigCode":"persistent_relation","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体是否关联表","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"7a9b549923a1120187dadd2552b1341b","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"c7746f53080130127431c4a7b7417c26","persistentTableConfigCode":"persistent_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"7a9b549923a1120187dadd2552b1341b","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.889 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=8e954fce-ac50-45b9-9bbd-fb5eaa839b4f, persistentName=企业, persistentCode=enterprise, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=5, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.895 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"ENTERPRISE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"0f58c5a12ac6a1d2721ccc34e1cf58df","persistentFormCode":"ENTERPRISE_DEFAULT_FORM","persistentFormName":"ENTERPRISE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"8e954fce-ac50-45b9-9bbd-fb5eaa839b4f","sortCode":15,"status":1},"ENTERPRISE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"06307d51672f87f0f49f3ade0743412b","persistentFormConfigCode":"enterprise_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"企业名称","persistentFormConfigRequired":0,"persistentFormId":"0f58c5a12ac6a1d2721ccc34e1cf58df","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ac155ba235fb89baf0d25f1f29d679ab","persistentFormConfigCode":"enterprise_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"企业编码","persistentFormConfigRequired":0,"persistentFormId":"0f58c5a12ac6a1d2721ccc34e1cf58df","sortCode":1,"status":1}]},{"ENTERPRISE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"6adeb4173f015d672f16b276a40500c0","persistentId":"8e954fce-ac50-45b9-9bbd-fb5eaa839b4f","persistentTableCode":"ENTERPRISE_DEFAULT_TABLE","persistentTableName":"ENTERPRISE默认表格","sortCode":15,"status":1},"ENTERPRISE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"33a70889811c4983127e8df408630e85","persistentTableConfigCode":"enterprise_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"企业编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"6adeb4173f015d672f16b276a40500c0","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"398778758dd9e0ce605b2b8e1ac0b6e6","persistentTableConfigCode":"enterprise_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"企业名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"6adeb4173f015d672f16b276a40500c0","sortCode":2,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.897 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=9aafb17f-45cd-4bae-a4de-934c087c0f61, persistentName=权限, persistentCode=authority, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=6, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.904 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"AUTHORITY_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"08cfb2dd601194f8812020d6b0d18494","persistentFormCode":"AUTHORITY_DEFAULT_FORM","persistentFormName":"AUTHORITY默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"9aafb17f-45cd-4bae-a4de-934c087c0f61","sortCode":15,"status":1},"AUTHORITY_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"1380b18418dcc4aa4dc990d5098d06ee","persistentFormConfigCode":"authority_path","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限路径","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"966eb3ec27a7227e9abad52c08c74dac","persistentFormConfigCode":"authority_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限类型","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"b3250af0c5a4a52170230264ef4dbe9b","persistentFormConfigCode":"authority_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限名称","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"cf094eacd49cd2c83d39b70b814fed3b","persistentFormConfigCode":"authority_method","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限请求模式","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"d849199afa2a06a96b304073ad2bdbe6","persistentFormConfigCode":"authority_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"权限编码","persistentFormConfigRequired":0,"persistentFormId":"08cfb2dd601194f8812020d6b0d18494","sortCode":1,"status":1}]},{"AUTHORITY_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"2a7975b0bc71b1a8ccd7565a6426eb52","persistentId":"9aafb17f-45cd-4bae-a4de-934c087c0f61","persistentTableCode":"AUTHORITY_DEFAULT_TABLE","persistentTableName":"AUTHORITY默认表格","sortCode":15,"status":1},"AUTHORITY_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"096f306f20f57c1dc477c49daf166d08","persistentTableConfigCode":"authority_method","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限请求模式","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"78ea656bdae6482a1bcccc55ceecdaf5","persistentTableConfigCode":"authority_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":5,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"bbcb02838e4d0be4bd84cf879a2c7c73","persistentTableConfigCode":"authority_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"edd11c2686fced4fa378c6efdef94e15","persistentTableConfigCode":"authority_path","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限路径","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f283d903aaefa7c904ddbcef367a5f5a","persistentTableConfigCode":"authority_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"权限名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"2a7975b0bc71b1a8ccd7565a6426eb52","sortCode":2,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.906 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=c553f6df-d9b1-47b9-8e18-ca18ba2cbf7a, persistentName=实体表单, persistentCode=persistent_form, persistentRelation=0, appServiceId=a646a940-09ee-4186-8c8c-8c3d79b24d9f, status=1, sortCode=13, createdDate=2022-12-19T23:29:33, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.915 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"PERSISTENTFORM_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"4db18b2164ac12999e56c8e59b4ff56d","persistentFormCode":"PERSISTENTFORM_DEFAULT_FORM","persistentFormName":"PERSISTENTFORM默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"c553f6df-d9b1-47b9-8e18-ca18ba2cbf7a","sortCode":15,"status":1},"PERSISTENTFORM_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"1b34086d599e0fd5689012b5cba161f5","persistentFormConfigCode":"persistent_form_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单名称","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"898f7bc649a00322e52e4c2509aaa39f","persistentFormConfigCode":"persistent_form_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单编码","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8b2cb82234d142165ea35bc566452384","persistentFormConfigCode":"persistent_form_type","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单类型","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"c12b9e709698bec884ddac67029f8433","persistentFormConfigCode":"persistent_form_row","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"实体表单列数","persistentFormConfigRequired":0,"persistentFormId":"4db18b2164ac12999e56c8e59b4ff56d","sortCode":4,"status":1}]},{"PERSISTENTFORM_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"09f1194ff1eb49a3eb707f775b1bee01","persistentId":"c553f6df-d9b1-47b9-8e18-ca18ba2cbf7a","persistentTableCode":"PERSISTENTFORM_DEFAULT_TABLE","persistentTableName":"PERSISTENTFORM默认表格","sortCode":15,"status":1},"PERSISTENTFORM_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"75b1d034da3fbff1bcb2901adcf610a8","persistentTableConfigCode":"persistent_form_row","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单列数","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":4,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8a23f5c63be84003c75f25ca82cddf53","persistentTableConfigCode":"persistent_form_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"afebb094f39aae512b9e05b1e72f793d","persistentTableConfigCode":"persistent_form_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"dca8ffe7443b5624facca8b4f9c18188","persistentTableConfigCode":"persistent_form_type","persistentTableConfigDisplay":0,"persistentTableConfigName":"实体表单类型","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"09f1194ff1eb49a3eb707f775b1bee01","sortCode":3,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.917 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=ea17ecb7-4ab9-4f93-8546-3da3483400aa, persistentName=角色, persistentCode=role, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=7, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.926 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"ROLE_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"f51e12991439db6a1565682c2e618e00","persistentFormCode":"ROLE_DEFAULT_FORM","persistentFormName":"ROLE默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"ea17ecb7-4ab9-4f93-8546-3da3483400aa","sortCode":15,"status":1},"ROLE_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"c5322b9e4c20990297bbf0cd46610868","persistentFormConfigCode":"role_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"角色编码","persistentFormConfigRequired":0,"persistentFormId":"f51e12991439db6a1565682c2e618e00","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"f55713c3709798b392f0e32c83ba0488","persistentFormConfigCode":"role_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"角色名称","persistentFormConfigRequired":0,"persistentFormId":"f51e12991439db6a1565682c2e618e00","sortCode":2,"status":1}]},{"ROLE_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"00383e21ff48b2a8e15c0cd22dbc0793","persistentId":"ea17ecb7-4ab9-4f93-8546-3da3483400aa","persistentTableCode":"ROLE_DEFAULT_TABLE","persistentTableName":"ROLE默认表格","sortCode":15,"status":1},"ROLE_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"0c118ed636797b938a3bb4389620ed9c","persistentTableConfigCode":"role_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"角色名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"00383e21ff48b2a8e15c0cd22dbc0793","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ea787e983d793e52681d734eb76dce9f","persistentTableConfigCode":"role_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"角色编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"00383e21ff48b2a8e15c0cd22dbc0793","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.928 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=edd90446-98bc-4330-8d93-1ba4ff003af0, persistentName=用户, persistentCode=user, persistentRelation=0, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=8, createdDate=2022-12-13T00:15:37, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.933 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[{"USER_DEFAULT_FORM":{"createdDate":"2022-12-29 22:43:10","id":"f3587fc5abbb541ba9598f19d513bb82","persistentFormCode":"USER_DEFAULT_FORM","persistentFormName":"USER默认表单","persistentFormRow":1,"persistentFormType":"default_form","persistentId":"edd90446-98bc-4330-8d93-1ba4ff003af0","sortCode":15,"status":1},"USER_DEFAULT_FORMConfig":[{"createdDate":"2022-12-29 22:43:10","id":"7917c1301febb7b6569f88bf13fb9391","persistentFormConfigCode":"user_code","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"用户编码","persistentFormConfigRequired":0,"persistentFormId":"f3587fc5abbb541ba9598f19d513bb82","sortCode":1,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8e737188742d03b1266cac76196269aa","persistentFormConfigCode":"user_password","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"用户密码","persistentFormConfigRequired":0,"persistentFormId":"f3587fc5abbb541ba9598f19d513bb82","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"ba095bae10f4e9b5e106c4f80b8c8565","persistentFormConfigCode":"user_name","persistentFormConfigEdit":0,"persistentFormConfigMode":"Input","persistentFormConfigName":"用户名称","persistentFormConfigRequired":0,"persistentFormId":"f3587fc5abbb541ba9598f19d513bb82","sortCode":2,"status":1}]},{"USER_DEFAULT_TABLE":{"createdDate":"2022-12-29 22:43:10","id":"c39985642b59f37b5a4e2ba4db1a0cef","persistentId":"edd90446-98bc-4330-8d93-1ba4ff003af0","persistentTableCode":"USER_DEFAULT_TABLE","persistentTableName":"USER默认表格","sortCode":15,"status":1},"USER_DEFAULT_TABLEConfig":[{"createdDate":"2022-12-29 22:43:10","id":"31dcfb5cac1cfa1836162e63987177b4","persistentTableConfigCode":"user_password","persistentTableConfigDisplay":0,"persistentTableConfigName":"用户密码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"c39985642b59f37b5a4e2ba4db1a0cef","sortCode":3,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"8cd6f2db807727aca992977068a5b99a","persistentTableConfigCode":"user_name","persistentTableConfigDisplay":0,"persistentTableConfigName":"用户名称","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"c39985642b59f37b5a4e2ba4db1a0cef","sortCode":2,"status":1},{"createdDate":"2022-12-29 22:43:10","id":"cbedcc4a53c3e469d0dbec85a16926cb","persistentTableConfigCode":"user_code","persistentTableConfigDisplay":0,"persistentTableConfigName":"用户编码","persistentTableConfigSearch":0,"persistentTableConfigWidth":0,"persistentTableId":"c39985642b59f37b5a4e2ba4db1a0cef","sortCode":1,"status":1}]}],"persistentTable":[]}
2022-12-31 20:37:49.935 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.persistent:PersistentBean(id=fa481a88-8417-4e7e-9a26-75efacf26719, persistentName=角色权限, persistentCode=role_authority, persistentRelation=1, appServiceId=5f5e77a4-f953-459d-bdd4-28eb9f974aaa, status=1, sortCode=9, createdDate=2022-12-15T22:16:41, createdBy=null, updated_date=null, updatedBy=null)
2022-12-31 20:37:49.938 [main] INFO  c.e.c.s.bean.custom.PersistentCustomServiceImpl - findDataTableAndFormByName.jsonObject:{"persistentForm":[],"persistentTable":[]}
2022-12-31 20:37:59.571 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

2022-12-31 20:37:59.571 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-12-31 20:37:59.572 [DiscoveryClient-HeartbeatExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:37:59.572 [DiscoveryClient-CacheRefreshExecutor-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:37:59.572 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

2022-12-31 20:37:59.572 [DiscoveryClient-HeartbeatExecutor-0] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:37:59.584 [main] INFO  o.s.test.context.transaction.TransactionContext - Rolled back transaction for test: [DefaultTestContext@4d910fd6 testClass = CyjEntityCreaterApplicationTest, testInstance = CyjEntityCreaterApplicationTest(wac=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76a36b71, started on Sat Dec 31 20:35:50 CST 2022, parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@571c5681, mockMvc=null, persistentCustomServiceImpl=com.example.cyjentitycreater.service.bean.custom.PersistentCustomServiceImpl@1e7245da), testMethod = findDataTableAndFormByNameTest@CyjEntityCreaterApplicationTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@26275bef testClass = CyjEntityCreaterApplicationTest, locations = '{}', classes = '{class com.example.cyjentitycreater.CyjEntityCreaterApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=0}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e38921c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@49070868, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3f200884, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4206a205, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2641e737], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> false]]
2022-12-31 20:37:59.590 [SpringContextShutdownHook] INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application CYJ-ENTITY-CREATER with eureka with status DOWN
2022-12-31 20:37:59.590 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1672490279590, current=DOWN, previous=UP]
2022-12-31 20:37:59.590 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0: registering service...
2022-12-31 20:37:59.818 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2022-12-31 20:37:59.823 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2022-12-31 20:37:59.835 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2022-12-31 20:37:59.837 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2022-12-31 20:38:02.854 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2022-12-31 20:38:03.693 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

2022-12-31 20:38:03.694 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:38:03.694 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:38:03.694 [DiscoveryClient-InstanceInfoReplicator-0] WARN  com.netflix.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-12-31 20:38:06.901 [SpringContextShutdownHook] INFO  c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

2022-12-31 20:38:06.903 [SpringContextShutdownHook] WARN  c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2022-12-31 20:38:06.903 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - DiscoveryClient_CYJ-ENTITY-CREATER/NOICE:cyj-entity-creater:0 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
2022-12-31 20:38:06.926 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
